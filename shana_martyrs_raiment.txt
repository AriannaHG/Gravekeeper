[ItemType]  name=Martyr's Raiment;
ID=shana_martyrs_raiment; sprite=96;
texture=gkart; itemCategory=3;
description=Bloodstained robe that defies mortal wounds.<n=>In combat, most instances of physical damage received in excess of 20% of the wearer's maximum <icon=HP> will see the excess deferred until the end of the wearer's turn.<n=>Additionally, the wearer attracts enemy attention more easily.;
--todo:physical damage received in excess of 20% of the wearer's maximum <icon=HP> will be deferred until the end of the wearer's turn, though only the last damage instance of a blow is considered.<n=>Additionally, the wearer attracts enemy attention more easily.;
journalID=shana_journal_martyrs_raiment;
weight=4; volume=15; value=9999;
pR=pAsh_still; pB=pMarble_deepPurple;
[ItemEffect]
ID=shana_martyrs_raiment; actorValue=MagEva; magnitude=18; duration=-1;
[ItemEffect]
ID=shana_martyrs_raiment; actorValue=skill_Life; magnitude=2; duration=-1;
[ItemEffect]
ID=shana_martyrs_raiment; actorValue=skill_Ruin; magnitude=2; duration=-1;

[ItemReaction]-------------------------------------------------------------- the actual damage soaking action. Lo, to the aspirant who wishes to make a similar item - special=canReactMultipleTimesPerTurn; is kind of fucked because the way reactions work is: actorValues=HP; element=physical; means that it will proc if the action has the physical element and changes your hp. However, if multiple elements are matched, it would proc multiple times. For an extreme case a volskarn sword action matched against actor value hp and element all would have all 5 of its elements match all, thus making it proc 5 times. Restricting it to physical was not by choice lol
ID=shana_martyrs_raiment;
actorValues=HP; element=physical; action=shana_martyrs_raiment_act; aiRatingMod=8; ------the AI rating mod adds 8 hp worth of "incentive" for the AI to proc this reaction

--[ItemReaction]
--ID=shana_martyrs_raiment; -------------------------------------------------- commented out because game crashes on main menu if it tries to do this set shana_HPBeforeBeingHit AV on equip to initialize
--element=itemEquipped; action=shana_martyrs_raiment_set_hp_count;

[ItemReaction]
ID=shana_martyrs_raiment; -------------------------------------------------- set shana_HPBeforeBeingHit and shana_NegateBeforeBeingHit AV on combat start to initialize
element=combatStart; action=shana_martyrs_raiment_set_hp_count;

[ItemReaction]
ID=shana_martyrs_raiment; -------------------------------------------------- set shana_HPBeforeBeingHit and shana_NegateBeforeBeingHit AV on revive
actorValues=revive; action=shana_martyrs_raiment_set_hp_count;

[ItemReaction]
ID=shana_martyrs_raiment; -------------------------------------------------- set shana_HPBeforeBeingHit and shana_NegateBeforeBeingHit AV on negate
actorValues=negate; action=shana_martyrs_raiment_set_hp_count;

[ItemReaction]
ID=shana_martyrs_raiment; -------------------------------------------------- set shana_HPBeforeBeingHit and shana_NegateBeforeBeingHit AV on any element, only happens in combat
actorValues=HP; element=any; action=shana_martyrs_raiment_set_hp_count_multireact;

[ItemReaction]
ID=shana_martyrs_raiment; -------------------------------------------------- set shana_HPBeforeBeingHit and shana_NegateBeforeBeingHit AV on any element, only happens in combat
actorValues=HPTrue; element=any; action=shana_martyrs_raiment_set_hp_count_multireact;

[ActorValue] --------------------------------------------------------------- define shana_HPBeforeBeingHit AV
ID=shana_HPBeforeBeingHit;
name=HP Before Being Hit (this should not be visible);
icon=;
bubbleIcon=;

defaultValue = 0; AIValue = 0;
harmfulMagnitude = 0;
affectsActors = true;
canAffectIncapped = true;
showDamageNumbers = false;
showDamageNumbersMagnitude = false;
showDamageNumbersSign = false;
showDamageNumbersIcon = false;
showDamageNumbersElements = false;
showDamageNumbersIconInTooltips = false;
damageNumberColor_Positive = Green;
damageNumberColor_Negative = Green;
actorPaletteOverride =;
actorPaletteOverrideDuration = 0;
elementReactionModifiesDuration = false;
canBeRemovedByNonspecificAVEffectRemoval = false;
recordInActorData = true;
showEvaluationInfo = false;
allowDecimalValues = false;
percentage = false;
XPCostBase = 0;
XPCostIncrement = 0;
XPCostMultiplier = 1;
XPCostFloorToNearest = 0;

[ActorValueReaction] -----------------------------------------------------------------------------------------------------------------------garbage collection
ID=shana_HPBeforeBeingHit;
element=combatEnd; newID=X;


[ActorValue] --------------------------------------------------------------- define shana_NegateBeforeBeingHit AV
ID=shana_NegateBeforeBeingHit;
name=You Have Negate Before Being Hit (this should not be visible);
icon=;
bubbleIcon=;

defaultValue = 0; AIValue = 0;
harmfulMagnitude = 0;
affectsActors = true;
canAffectIncapped = true;
showDamageNumbers = false;
showDamageNumbersMagnitude = false;
showDamageNumbersSign = false;
showDamageNumbersIcon = false;
showDamageNumbersElements = false;
showDamageNumbersIconInTooltips = false;
damageNumberColor_Positive = Green;
damageNumberColor_Negative = Green;
actorPaletteOverride =;
actorPaletteOverrideDuration = 0;
elementReactionModifiesDuration = false;
canBeRemovedByNonspecificAVEffectRemoval = false;
removedByNegativeMagnitude=true; --this isn't in the above av, this is so I can remove it with the check avaffecter
recordInActorData = true;
showEvaluationInfo = false;
allowDecimalValues = false;
percentage = false;
XPCostBase = 0;
XPCostIncrement = 0;
XPCostMultiplier = 1;
XPCostFloorToNearest = 0;

[ActorValueReaction] -----------------------------------------------------------------------------------------------------------------------garbage collection
ID=shana_NegateBeforeBeingHit;
element=combatEnd; newID=X;

[ActorValue] --------------------------------------------------------------this is necessary for the raiment to work, hopefully it doesnt result in too much lag
ID=negate;
cloneFrom=negate;
executeActionOnDurationEnd=shana_martyrs_raiment_set_hp_count;



[Action] ID=shana_martyrs_raiment_set_hp_count; --------------------------------------------------------------------------------------------set equal to current hp at the time its called. 
harmful=false;
special=usableEvenWhenCantAct;
special=usableEvenWhenReacting;
special=usableEvenWhenYourTurn;
[ActionAoE] 
    ID=shana_martyrs_raiment_set_hp_count;
    cloneFrom=oneTile;
[AvAffecter] ---------------------------------------------------VERY IMPORTANT - duration -1 lets the av have negative values since its treated similarly to say an equip with negative stats. duration -2 locks it to a positive value. The only source of desync I can observe is directly changing the hp value of the wearer in debug mode, but I don't think there's an ingame equivalent to that.
    ID=shana_martyrs_raiment_set_hp_count; 
    harmful=false;
    actorValue=shana_HPBeforeBeingHit; 
    magnitude=-t:shana_HPBeforeBeingHit + t:HP;
    duration=-1;
    chance=100;
    visibleMiss=false;
--	FXOnHit=magicCharge;
--	FXOnHit=largePing;
--	FXOnHitColor=SkyBlue;
	FXOnTile=delay_tiniest;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_set_hp_count;
    cloneFrom=oneTile;
[AvAffecter]--do you have negate?
    ID=shana_martyrs_raiment_set_hp_count;
    harmful=false;
    actorValue=shana_NegateBeforeBeingHit;
    magnitude=1;
    duration=-2;
    chance=100 * t:negate;
    visibleMiss=false;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_set_hp_count;
    cloneFrom=oneTile;
[AvAffecter]--do you NOT have negate?
    ID=shana_martyrs_raiment_set_hp_count;
    harmful=false;
    actorValue=shana_NegateBeforeBeingHit;
    magnitude=-1; --removed
    duration=-2;
    chance=100 - 100 * t:negate;
    visibleMiss=false;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_set_hp_count;
    cloneFrom=oneTile;

[Action] ID=shana_martyrs_raiment_set_hp_count_multireact; --------------------------------------------------------------------------------------------set equal to current hp at the time its called.
harmful=false;
special=usableEvenWhenCantAct;
special=usableEvenWhenReacting;
special=usableEvenWhenYourTurn;
special=canReactMultipleTimesPerTurn;
[ActionAoE]
    ID=shana_martyrs_raiment_set_hp_count_multireact;
    cloneFrom=oneTile;
[AvAffecter]
    ID=shana_martyrs_raiment_set_hp_count_multireact;
    harmful=false;
    actorValue=shana_HPBeforeBeingHit;
    magnitude=-t:shana_HPBeforeBeingHit + t:HP;
    duration=-1;
    chance=m:combat * 100; ----helps stop stacking
    visibleMiss=false;
--	FXOnHit=magicCharge;
--	FXOnHit=largePing;
--	FXOnHitColor=SkyBlue;
	FXOnTile=delay_tiniest;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_set_hp_count_multireact;
    cloneFrom=oneTile;
[AvAffecter]--do you have negate?
    ID=shana_martyrs_raiment_set_hp_count_multireact;
    harmful=false;
    actorValue=shana_NegateBeforeBeingHit;
    magnitude=1;
    duration=-2;
    chance=100 * t:negate;
    visibleMiss=false;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_set_hp_count_multireact;
    cloneFrom=oneTile;
[AvAffecter]--do you NOT have negate?
    ID=shana_martyrs_raiment_set_hp_count_multireact;
    harmful=false;
    actorValue=shana_NegateBeforeBeingHit;
    magnitude=-1; --removed
    duration=-2;
    chance=100 - 100 * t:negate;
    visibleMiss=false;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_set_hp_count_multireact;
    cloneFrom=oneTile;



[JournalEntry]
ID=shana_journal_martyrs_raiment;
category=equipment; halfPage=false; rarity=4;
title=Martyr's Raiment;
text=<itemBig=shana_martyrs_raiment><title=Martyr's Raiment><brAdj=>   Sacrificial garment of mundane origin, once donned by a frail old woman who used her failing, plague-ridden body to buy time for the citizens of Barrow to flee the undead hordes.<n=>   While in combat, physical attacks exceeding 20% of the wearer's maximum <icon=HP> have the excess damage converted to a delayed, incurable, untransferable wound. However, only the magnitude of the final instance of damage associated with a compound attack - such as the damage from being pushed into an ally, or the additional damage inflicted by a weapon augment, would be considered for this effect. This wound is borne in full at the end of the wearer's turn, bypassing all attempts at mitigation.<n=>   Furthermore, the wearer will find themselves a more attractive target to physically inclined adversaries - as though some unseen force were subtly trying to recreate the original bearer's sacrifice.;
--there's a bit of jank in favor of the player here but I can't fix it. In the event of taking 9999 physical damage with a rider of slightly higher than 20% of the wearer's hp, the wearer would wind up on the brink of death as they're at 0 hp and then healed slightly/get a slight delayed wound. This jank is on the level of vanilla negate, it's player favoured, and it's insanely unlikely to come up in actual play, and I've spent way too long on this item so it can stay =)
--------------------------------------------------------Martyrs Raiment Formulas
[FormulaGlobal] ID=shana_0.2_maxhp;
formula=c:HPMax * 0.2;

[FormulaGlobal] ID=shana_floor_0.2_maxhp;
formula=floor:d:shana_0.2_maxhp;

[FormulaGlobal] ID=shana_martyrs_raiment_threshold;
formula=min:1:d:shana_floor_0.2_maxhp;

[FormulaGlobal] ID=shana_current_hp_minus_threshold; -- hp before being hit
formula=c:shana_HPBeforeBeingHit - d:shana_martyrs_raiment_threshold;

[FormulaGlobal] ID=shana_is_hp_above_threshold;
formula=moreThan:0:d:shana_current_hp_minus_threshold;

[FormulaGlobal] ID=shana_martyrs_raiment_damage_prevented;
formula=m:cLastDmgTaken - d:shana_martyrs_raiment_threshold;

[FormulaGlobal] ID=shana_martyrs_raiment_did_it_proc;
formula=moreThan:0:d:shana_martyrs_raiment_damage_prevented - t:shana_NegateBeforeBeingHit; --prevent negate still giving debuff

[FormulaGlobal] ID=shana_martyrs_raiment_heal_cap_after_hit;
formula=c:shana_HPBeforeBeingHit - m:cLastDmgTaken + d:shana_martyrs_raiment_damage_prevented;

[FormulaGlobal] ID=shana_martyrs_raiment_healback_calc;
formula=d:shana_martyrs_raiment_damage_prevented - d:shana_martyrs_raiment_heal_cap_after_hit;

[FormulaGlobal] ID=shana_martyrs_raiment_healback_damage_prevented_bigger;
formula=moreThan:0:d:shana_martyrs_raiment_healback_calc;

[FormulaGlobal] ID=shana_martyrs_raiment_healback_damage_prevented_smaller_or_zero;
formula=1 - d:shana_martyrs_raiment_healback_damage_prevented_bigger;

[FormulaGlobal] ID=shana_healback_pt1;
formula=d:shana_martyrs_raiment_healback_damage_prevented_bigger * d:shana_martyrs_raiment_heal_cap_after_hit;

[FormulaGlobal] ID=shana_healback_pt2;
formula=d:shana_martyrs_raiment_healback_damage_prevented_smaller_or_zero * d:shana_martyrs_raiment_damage_prevented;

[FormulaGlobal] ID=shana_martyrs_raiment_healback;
formula=d:shana_healback_pt1 + d:shana_healback_pt2;

--------------------------------------------------------Action for Martyr's Raiment, only occurring when hp dmg taken more than 20% wearers max hp rounded down.
[Action] ID=shana_martyrs_raiment_act;
harmful=false;
special=usableEvenWhenCantAct;
--special=usableEvenWhenReacting;
special=usableEvenWhenYourTurn;
special=canReactMultipleTimesPerTurn; ----------------------------this caused softlock issues before but fixed
[ActionAoE]
    ID=shana_martyrs_raiment_act;
    cloneFrom=oneTile;
[AvAffecter] --------------------------------------------------------------------------------------------give redeemed suffering
ID=shana_martyrs_raiment_act;
    harmful=false;
    actorValue=shana_redeemed_suffering_status;
    magnitude=d:shana_martyrs_raiment_damage_prevented + t:shana_redeemed_suffering_status;
    duration=9999; --unfortunately I need to do this jank for it to be visible to player
    chance=m:cLastDmgTakenGreaterThanX(0) * 100 + d:shana_martyrs_raiment_did_it_proc * 100 + d:shana_is_hp_above_threshold * 100 + m:combat * 100 - 300; --procs only if took damage, not heal and hp before being hit is more than threshold and are in combat
    FXOnHit=manySplatter;
    FXOnHitColor=Red;
    visibleMiss=false;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_act;
    cloneFrom=oneTile;
[AvAffecter] ---------------------------------------------------------------------------------------------this will actually prevent damage by instantly healing that much back.
    ID=shana_martyrs_raiment_act;
    harmful=false;
    actorValue=HPTrue;
    magnitude=d:shana_martyrs_raiment_healback;
    duration=-2;
    chance=m:cLastDmgTakenGreaterThanX(0) * 100 + d:shana_martyrs_raiment_did_it_proc * 100 + d:shana_is_hp_above_threshold * 100 + m:combat * 100 - 300;
    visibleEvaluations=false;
    visibleMiss=false;
[AvAffecterAoE]
   ID=shana_martyrs_raiment_act;
    cloneFrom=oneTile;
[AvAffecter]  -----------------------------------------Set hp count AV after being hit
    ID=shana_martyrs_raiment_act;
    harmful=false;
    actorValue=shana_HPBeforeBeingHit;
    magnitude=-t:shana_HPBeforeBeingHit + t:HP; -------the magnitude and duration had to be done this way because iirc hp can't go negative, so the usual -2 duration method and directly getting the hp wasn't cutting it hence the jank state machine. hope no more desyncs happened lmao
    duration=-1;
    chance=100;
    visibleMiss=false;
--	FXOnHit=magicCharge;
--	FXOnHit=largePing;
--	FXOnHitColor=SkyBlue;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_act; 
    cloneFrom=oneTile;
[AvAffecter]--do you have negate?
    ID=shana_martyrs_raiment_act;
    harmful=false;
    actorValue=shana_NegateBeforeBeingHit;
    magnitude=1;
    duration=-2;
    chance=100 * t:negate;
    visibleMiss=false;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_act;
    cloneFrom=oneTile;
[AvAffecter]--do you NOT have negate?
    ID=shana_martyrs_raiment_act;
    harmful=false;
    actorValue=shana_NegateBeforeBeingHit;
    magnitude=-1; --removed
    duration=-2;
    chance=100 - 100 * t:negate;
    visibleMiss=false;
[AvAffecterAoE]
    ID=shana_martyrs_raiment_act;
    cloneFrom=oneTile;


----------------------------------------------------------------Redeemed Suffering Status AV
[ActorValue]
ID=shana_redeemed_suffering_status;
name=Redeemed Suffering;
icon=<icon=icon_redeemed_suffering>;
bubbleIcon=icon_redeemed_suffering_small;
removedByNegativeMagnitude=true;
--description=;
defaultValue = 0; AIValue = 1;
minimum=0;
harmfulMagnitude = 1;
--bonusesMultiplier = 1;
animationOnHarmful = pain;
affectsActors = true;
canAffectIncapped = false;
showDamageNumbers = true;
showDamageNumbersMagnitude = true;
showDamageNumbersSign = false;
showDamageNumbersIcon = true;
showDamageNumbersElements = true;
showDamageNumbersIconInTooltips = true;
damageNumberColor_Positive = Green;
damageNumberColor_Negative = Green;
actorPaletteOverride =;
actorPaletteOverrideDuration = 0.27;
elementReactionModifiesDuration = false;
canBeRemovedByNonspecificAVEffectRemoval = false;
recordInActorData = true;
showEvaluationInfo = true;
allowDecimalValues = false;
percentage = false;
XPCostBase = 0;
XPCostIncrement = 0;
XPCostMultiplier = 1;
XPCostFloorToNearest = 0;

[ActorValueReaction]
ID=shana_redeemed_suffering_status; actorValues=shana_redeemed_suffering_status; newID=shana_redeemed_suffering_status;

[ActorValueReaction]
ID=shana_redeemed_suffering_status; element=ruinTouch; damageMultiplier=1.34;

[ActorValueReaction] -----------------------------------------------------------------------------------------------------------------------garbage collection
ID=shana_redeemed_suffering_status;
element=combatEnd; newID=X;

[ActorValueReaction]
ID=shana_redeemed_suffering_status; element=endTurn;
action=shana_redeemed_suffering_damage;

[Action] ID=shana_redeemed_suffering_damage; 
	special=usableWithoutACaster;
	special=usableEvenWhenCantAct;
	special=usableEvenWhenReacting;
	special=usableEvenWhenYourTurn;
	special=dontDelayOtherActions;
	
[ActionAoE] ----------------------------------------------------------do damage equal to stack size
	ID=shana_redeemed_suffering_damage; 
	cloneFrom=oneTile;

[AvAffecter]
	ID=shana_redeemed_suffering_damage; 
	visibleEvaluations=true;
	harmful=true;
	actorValue=HPTrue;
	magnitude=c:shana_redeemed_suffering_status * -1;
	duration=-2;
	chance=100;
	visibleMiss=false;
	
	FXOnHit=ping;
	FXOnHitColor=Black;
	FXOnHit=manySplatter;
	FXOnHitColor=Red;
	FXOnHit=manySplatter;
	FXOnHitColor=Black;
	FXOnHit=manySplatter;
	FXOnHitColor=DarkRed;
	FXOnHit=pop;

[AvAffecterAoE]
	ID=shana_redeemed_suffering_damage;
	aoeCasterAsOrigin = true;
	cloneFrom=oneTile;

[ActionAoE] ----------------------------------------------------------remove self
	ID=shana_redeemed_suffering_damage; 
	cloneFrom=oneTile;

[AvAffecter]
	ID=shana_redeemed_suffering_damage; 
	visibleEvaluations=true;
	harmful=true;
	actorValue=shana_redeemed_suffering_status;
	magnitude=c:shana_redeemed_suffering_status * -1;
	duration=9999;
	chance=100;
	visibleMiss=false;

[AvAffecterAoE]
	ID=shana_redeemed_suffering_damage;
	aoeCasterAsOrigin = true;
	cloneFrom=oneTile;





